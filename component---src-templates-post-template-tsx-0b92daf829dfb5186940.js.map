{"version":3,"file":"component---src-templates-post-template-tsx-0b92daf829dfb5186940.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Post/PostHeadInfo.tsx","webpack://gatsby-starter-default/./src/components/Post/PostHead.tsx","webpack://gatsby-starter-default/./src/components/Post/PostContent.tsx","webpack://gatsby-starter-default/./src/components/Post/CommentWidget.tsx","webpack://gatsby-starter-default/./src/templates/post_template.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport type PostHeadInfoProps = {\r\n  title: string\r\n  date: string\r\n  categories: string[]\r\n}\r\n\r\nconst PostHeadInfoWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 768px;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  padding: 60px 0;\r\n  color: #ffffff;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    padding: 40px 20px;\r\n  }\r\n`\r\n\r\nconst PrevPageIcon = styled.div`\r\n  display: grid;\r\n  place-items: center;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  background: #ffffff;\r\n  color: #000000;\r\n  font-size: 22px;\r\n  cursor: pointer;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\r\n\r\n  @media (max-width: 768px) {\r\n    width: 30px;\r\n    height: 30px;\r\n    font-size: 18px;\r\n  }\r\n`\r\n\r\nconst Title = styled.div`\r\n  display: -webkit-box;\r\n  overflow: hidden;\r\n  overflow-wrap: break-word;\r\n  margin-top: auto;\r\n  text-overflow: ellipsis;\r\n  white-space: normal;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  font-size: 50px;\r\n  font-weight: 800;\r\n  @import url('https://fonts.googleapis.com/css2?family=Noto+Serif+KR:wght@400;500;600;700&display=swap');\r\n  font-family: 'Noto Serif KR', serif;\r\n  @media (max-width: 768px) {\r\n    font-size: 30px;\r\n  }\r\n`\r\n\r\nconst PostData = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 40px;\r\n  font-size: 18px;\r\n  /* font-weight: 700; */\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    font-size: 15px;\r\n    margin-top: 20px;\r\n    font-weight: 400;\r\n    gap: 3px;\r\n  }\r\n`\r\n\r\nconst PostHeadInfo: FunctionComponent<PostHeadInfoProps> = function ({\r\n  title,\r\n  date,\r\n  categories,\r\n}) {\r\n  const goBackPage = () => window.history.back()\r\n\r\n  return (\r\n    <PostHeadInfoWrapper>\r\n      <PrevPageIcon onClick={goBackPage}>\r\n        <FontAwesomeIcon icon={faArrowLeft} />\r\n      </PrevPageIcon>\r\n      <Title>{title}</Title>\r\n      <PostData>\r\n        <div>{categories.join(' / ')}</div>\r\n        <div>{date}</div>\r\n      </PostData>\r\n    </PostHeadInfoWrapper>\r\n  )\r\n}\r\n\r\nexport default PostHeadInfo\r\n","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\r\nimport PostHeadInfo, { PostHeadInfoProps } from 'components/Post/PostHeadInfo'\r\n\r\ntype GatsbyImgProps = {\r\n  image: IGatsbyImageData\r\n  alt: string\r\n  className?: string\r\n}\r\n\r\ntype PostHeadProps = PostHeadInfoProps & {\r\n  thumbnail: IGatsbyImageData\r\n}\r\n\r\nconst PostHeadWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 400px;\r\n\r\n  @media (max-width: 768px) {\r\n    height: 300px;\r\n  }\r\n`\r\n\r\nconst BackgroundImage = styled((props: GatsbyImgProps) => (\r\n  <GatsbyImage {...props} style={{ position: 'absolute' }} />\r\n))`\r\n  z-index: -1;\r\n  width: 100%;\r\n  height: 400px;\r\n  object-fit: cover;\r\n  filter: brightness(0.25);\r\n\r\n  @media (max-width: 768px) {\r\n    height: 300px;\r\n  }\r\n`\r\n\r\nconst PostHead: FunctionComponent<PostHeadProps> = function ({\r\n  title,\r\n  date,\r\n  categories,\r\n  thumbnail,\r\n}) {\r\n  return (\r\n    <PostHeadWrapper>\r\n      <BackgroundImage image={thumbnail} alt=\"thumbnail\" />\r\n      <PostHeadInfo title={title} date={date} categories={categories} />\r\n    </PostHeadWrapper>\r\n  )\r\n}\r\n\r\nexport default PostHead\r\n","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\ninterface PostContentProps {\r\n  html: string\r\n}\r\n\r\nconst MarkdownRenderer = styled.div`\r\n  // Renderer Style\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 768px;\r\n  margin: 0 auto;\r\n  padding: 80px 0;\r\n  word-break: break-all;\r\n\r\n  // Markdown Style\r\n  line-height: 220%;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n\r\n  // Apply Padding Attribute to All Elements\r\n  p {\r\n    margin-top: 0;\r\n  }\r\n\r\n  // Adjust Heading Element Style\r\n  * + h1,\r\n  * + h2,\r\n  * + h3 {\r\n    line-height: 1.25;\r\n  }\r\n\r\n  hr + h1,\r\n  hr + h2,\r\n  hr + h3 {\r\n    margin-top: 0;\r\n    padding-top: 0;\r\n  }\r\n\r\n  h1 {\r\n    margin: 0.67em 0;\r\n    font-weight: 600;\r\n    padding: 1em 0;\r\n    font-size: 2em;\r\n    border-bottom: 1px solid var(--color-border-muted);\r\n  }\r\n\r\n  h2 {\r\n    font-weight: 600;\r\n    padding: 1.6em 0;\r\n    font-size: 1.5em;\r\n    border-bottom: 1px solid var(--color-border-muted);\r\n  }\r\n\r\n  h3 {\r\n    font-weight: 600;\r\n    font-size: 1.25em;\r\n    padding: 1.2em 0;\r\n  }\r\n  h4 {\r\n    font-weight: 600;\r\n    font-size: 1em;\r\n  }\r\n  h5 {\r\n    font-weight: 600;\r\n    font-size: 0.875em;\r\n  }\r\n  h5 {\r\n    font-weight: 600;\r\n    font-size: 0.85em;\r\n  }\r\n\r\n  // Adjust Quotation Element Style\r\n  blockquote {\r\n    margin: 1.2em 0;\r\n    padding: 8px 20px;\r\n    border-left: 0.25em solid #333;\r\n    background-color: #f0f0f0;\r\n  }\r\n\r\n  /* .language-text {\r\n    padding: 0;\r\n  } */\r\n\r\n  // Adjust List Element Style\r\n  ol,\r\n  ul {\r\n    margin-left: 20px;\r\n    padding: 8px 0 12px;\r\n  }\r\n\r\n  li + li {\r\n    margin-top: 0.25em;\r\n  }\r\n\r\n  // Adjust Horizontal Rule style\r\n  hr {\r\n    border: 1px solid #acb1b6;\r\n    margin: 24px 0 80px 0;\r\n  }\r\n\r\n  li {\r\n    list-style: none;\r\n  }\r\n\r\n  ul li ul li {\r\n    list-style: circle;\r\n    margin-left: 8px;\r\n  }\r\n\r\n  ul [type='checkbox'],\r\n  ul [type='radio'] {\r\n    margin: 0 0.2em 0.25em -0.6em;\r\n    vertical-align: middle;\r\n  }\r\n\r\n  // Adjust Link Element Style\r\n  a {\r\n    color: #4263eb;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  img {\r\n    display: block;\r\n    border-style: none;\r\n    max-width: 90%;\r\n    box-sizing: content-box;\r\n    padding: 12px 20px;\r\n  }\r\n\r\n  // Adjust Code Style\r\n  pre[class*='language-'] {\r\n    margin: 30px 0;\r\n    padding: 25px;\r\n    font-size: 15px;\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n      background: rgba(255, 255, 255, 0.5);\r\n      border-radius: 3px;\r\n    }\r\n  }\r\n\r\n  .language-text {\r\n    padding: 0;\r\n  }\r\n\r\n  code[class*='language-'],\r\n  pre[class*='language-'] {\r\n    tab-size: 2;\r\n  }\r\n\r\n  // Markdown Responsive Design\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    padding: 60px 20px;\r\n    line-height: 200%;\r\n    font-size: 14px;\r\n\r\n    ol,\r\n    ul {\r\n      margin-left: 8px;\r\n      /* padding: 16px 0 20px 0; */\r\n\r\n      padding: 4px 0 12px 0;\r\n      line-height: 2;\r\n    }\r\n\r\n    hr {\r\n      margin: 50px 0;\r\n    }\r\n    // Adjust Code Style\r\n    pre[class*='language-'] {\r\n      margin: 25px 0;\r\n      padding: 16px;\r\n      font-size: 14px;\r\n    }\r\n  }\r\n`\r\n\r\nconst PostContent: FunctionComponent<PostContentProps> = function ({ html }) {\r\n  return <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />\r\n}\r\n\r\nexport default PostContent\r\n","import React, { createRef, FunctionComponent, useEffect } from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nconst src = 'https://utteranc.es/client.js'\r\nconst repo = 'lolWK/lolWK.github.io' // 자신 계정의 레포지토리로 설정\r\n\r\ntype UtterancesAttributesType = {\r\n  src: string\r\n  repo: string\r\n  'issue-term': string\r\n  label: string\r\n  theme: string\r\n  crossorigin: string\r\n  async: string\r\n}\r\n\r\nconst UtterancesWrapper = styled.div`\r\n  @media (max-width: 768px) {\r\n    padding: 0 20px;\r\n  }\r\n`\r\n\r\nconst CommentWidget: FunctionComponent = function () {\r\n  const element = createRef<HTMLDivElement>()\r\n\r\n  useEffect(() => {\r\n    if (element.current === null) return\r\n\r\n    const utterances: HTMLScriptElement = document.createElement('script')\r\n\r\n    const attributes: UtterancesAttributesType = {\r\n      src,\r\n      repo,\r\n      'issue-term': 'pathname',\r\n      label: 'Comment',\r\n      theme: `github-light`,\r\n      crossorigin: 'anonymous',\r\n      async: 'true',\r\n    }\r\n\r\n    Object.entries(attributes).forEach(([key, value]) => {\r\n      utterances.setAttribute(key, value)\r\n    })\r\n\r\n    element.current.appendChild(utterances)\r\n  }, [])\r\n\r\n  return <UtterancesWrapper ref={element} />\r\n}\r\n\r\nexport default CommentWidget\r\n","import React, { FunctionComponent } from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport { PostFrontmatterType } from 'types/PostItem.types'\r\nimport Template from 'components/Common/Template'\r\nimport PostHead from 'components/Post/PostHead'\r\nimport PostContent from 'components/Post/PostContent'\r\nimport CommentWidget from 'components/Post/CommentWidget'\r\n\r\ntype PostTemplateProps = {\r\n  data: {\r\n    allMarkdownRemark: {\r\n      edges: PostPageItemType[]\r\n    }\r\n  }\r\n  location: {\r\n    href: string\r\n  }\r\n}\r\n\r\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\r\n  data: {\r\n    allMarkdownRemark: { edges },\r\n  },\r\n  location: { href },\r\n}) {\r\n  const {\r\n    node: {\r\n      html,\r\n      frontmatter: {\r\n        title,\r\n        summary,\r\n        date,\r\n        categories,\r\n        thumbnail: {\r\n          childImageSharp: { gatsbyImageData },\r\n          publicURL,\r\n        },\r\n      },\r\n    },\r\n  } = edges[0]\r\n\r\n  return (\r\n    <Template title={title} description={summary} url={href} image={publicURL}>\r\n      <PostHead\r\n        title={title}\r\n        date={date}\r\n        categories={categories}\r\n        thumbnail={gatsbyImageData}\r\n      />\r\n      <PostContent html={html} />\r\n      <CommentWidget />\r\n    </Template>\r\n  )\r\n}\r\n\r\nexport default PostTemplate\r\n\r\nexport const queryMarkdownDataBySlug = graphql`\r\n  query queryMarkdownDataBySlug($slug: String) {\r\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\r\n      edges {\r\n        node {\r\n          html\r\n          frontmatter {\r\n            title\r\n            summary\r\n            date(formatString: \"YYYY.MM.DD.\")\r\n            categories\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData\r\n              }\r\n              publicURL\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport type PostPageItemType = {\r\n  node: {\r\n    html: string\r\n    frontmatter: PostFrontmatterType\r\n  }\r\n}\r\n"],"names":["PostHeadInfoWrapper","target","name","styles","PrevPageIcon","Title","PostData","title","date","categories","___EmotionJSX","onClick","window","history","back","FontAwesomeIcon","icon","faArrowLeft","join","PostHeadWrapper","BackgroundImage","_styled","props","GatsbyImage","style","position","thumbnail","image","alt","PostHeadInfo","MarkdownRenderer","html","dangerouslySetInnerHTML","__html","UtterancesWrapper","element","createRef","useEffect","current","utterances","document","createElement","attributes","src","repo","label","theme","crossorigin","async","Object","entries","forEach","_ref","key","value","setAttribute","appendChild","ref","data","allMarkdownRemark","edges","location","href","node","frontmatter","summary","childImageSharp","gatsbyImageData","publicURL","Template","description","url","PostHead","PostContent","CommentWidget"],"sourceRoot":""}