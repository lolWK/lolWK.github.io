{"version":3,"file":"component---src-pages-index-tsx-8beebca4d2fa448f1178.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Main/ProfileImage.tsx","webpack://gatsby-starter-default/./src/components/Main/Introduction.tsx","webpack://gatsby-starter-default/./src/components/Main/CategoryList.tsx","webpack://gatsby-starter-default/./src/components/Main/PostItem.tsx","webpack://gatsby-starter-default/./src/hooks/useInfiniteScroll.tsx","webpack://gatsby-starter-default/./src/components/Main/PostList.tsx","webpack://gatsby-starter-default/./node_modules/decode-uri-component/index.js","webpack://gatsby-starter-default/./node_modules/split-on-first/index.js","webpack://gatsby-starter-default/./node_modules/filter-obj/index.js","webpack://gatsby-starter-default/./node_modules/query-string/base.js","webpack://gatsby-starter-default/./node_modules/query-string/index.js","webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\r\n\r\ntype ProfileImageProps = {\r\n  profileImage: IGatsbyImageData\r\n}\r\n\r\nconst ProfileImageWrapper = styled(GatsbyImage)`\r\n  width: 120px;\r\n  height: 120px;\r\n  margin-bottom: 30px;\r\n  border-radius: 50%;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst ProfileImage: FunctionComponent<ProfileImageProps> = function ({\r\n  profileImage,\r\n}) {\r\n  return <ProfileImageWrapper image={profileImage} alt=\"Profile Image\" />\r\n}\r\n\r\nexport default ProfileImage\r\n","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\r\nimport ProfileImage from 'components/Main/ProfileImage'\r\n\r\ntype IntroductionProps = {\r\n  profileImage: IGatsbyImageData\r\n}\r\n\r\nconst Background = styled.div`\r\n  width: 100%;\r\n  background-color: #333;\r\n\r\n  color: #ffffff;\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  width: 768px;\r\n  height: 400px;\r\n  margin: 0 auto;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    height: 300px;\r\n    padding: 0 20px;\r\n  }\r\n`\r\n\r\nconst SubTitle = styled.div`\r\n  @font-face {\r\n    font-family: 'KyoboHand';\r\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_20-04@1.0/KyoboHand.woff')\r\n      format('woff');\r\n    font-weight: normal;\r\n    font-style: normal;\r\n  }\r\n  font-family: 'KyoboHand';\r\n  font-size: 22px;\r\n  font-weight: 400;\r\n  padding-left: 1px;\r\n  letter-spacing: 0.08rem;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 17px;\r\n  }\r\n`\r\n\r\nconst Title = styled.div`\r\n  @font-face {\r\n    font-family: 'Humanbumsuk';\r\n    src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2210-2@1.0/Humanbumsuk.woff2')\r\n      format('woff2');\r\n    font-weight: normal;\r\n    font-style: normal;\r\n  }\r\n  font-family: 'Humanbumsuk';\r\n  letter-spacing: 0.18rem;\r\n  margin-top: 12px;\r\n  font-size: 35px;\r\n  font-weight: 700;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 25px;\r\n  }\r\n`\r\n\r\nconst Introduction: FunctionComponent<IntroductionProps> = function ({\r\n  profileImage,\r\n}) {\r\n  return (\r\n    <Background>\r\n      <Wrapper>\r\n        <ProfileImage profileImage={profileImage} />\r\n\r\n        <div>\r\n          <SubTitle>만들어버렸다,</SubTitle>\r\n          <Title>Ati's devlog</Title>\r\n        </div>\r\n      </Wrapper>\r\n    </Background>\r\n  )\r\n}\r\n\r\nexport default Introduction\r\n","import React, { FunctionComponent, ReactNode } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { Link } from 'gatsby'\r\n\r\ntype CategoryItemProps = {\r\n  active: boolean\r\n}\r\n\r\ntype GatsbyLinkProps = {\r\n  children: ReactNode\r\n  className?: string\r\n  to: string\r\n} & CategoryItemProps\r\n\r\nexport type CategoryListProps = {\r\n  selectedCategory: string\r\n  categoryList: {\r\n    [key: string]: number\r\n  }\r\n}\r\n\r\nconst CategoryListWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 768px;\r\n  margin: 50px auto 0;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    margin-top: 32px;\r\n    padding: 0 20px;\r\n  }\r\n`\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nconst CategoryItem = styled(({ active, ...props }: GatsbyLinkProps) => (\r\n  <Link {...props} />\r\n))<CategoryItemProps>`\r\n  margin-right: 20px;\r\n  padding: 5px 0;\r\n  font-size: 18px;\r\n  font-weight: ${({ active }) => (active ? '800' : '400')};\r\n  cursor: pointer;\r\n\r\n  &:last-of-type {\r\n    margin-right: 0;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 15px;\r\n  }\r\n`\r\n\r\nconst CategoryList: FunctionComponent<CategoryListProps> = function ({\r\n  selectedCategory,\r\n  categoryList,\r\n}) {\r\n  return (\r\n    <CategoryListWrapper>\r\n      {Object.entries(categoryList).map(([name, count]) => (\r\n        <CategoryItem\r\n          to={`/?category=${name}`}\r\n          active={name === selectedCategory}\r\n          key={name}\r\n        >\r\n          #{name}({count})\r\n        </CategoryItem>\r\n      ))}\r\n    </CategoryListWrapper>\r\n  )\r\n}\r\n\r\nexport default CategoryList\r\n","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { Link } from 'gatsby'\r\nimport { PostFrontmatterType } from 'types/PostItem.types'\r\nimport { GatsbyImage } from 'gatsby-plugin-image'\r\n\r\ntype PostItemProps = PostFrontmatterType & { link: string }\r\n\r\nconst PostItemWrapper = styled(Link)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.15);\r\n  transition: 0.3s box-shadow;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\r\n  }\r\n`\r\n\r\nconst ThumbnailImage = styled(GatsbyImage)`\r\n  width: 100%;\r\n  height: 200px;\r\n  border-radius: 10px 10px 0 0;\r\n`\r\n\r\nconst PostItemContent = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 15px;\r\n`\r\n\r\nconst Title = styled.div`\r\n  display: -webkit-box;\r\n  overflow: hidden;\r\n  margin-bottom: 3px;\r\n  text-overflow: ellipsis;\r\n  white-space: normal;\r\n  overflow-wrap: break-word;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n`\r\n\r\nconst Date = styled.div`\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  opacity: 0.7;\r\n`\r\n\r\nconst Category = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-top: 10px;\r\n  margin: 10px -5px;\r\n`\r\n\r\nconst CategoryItem = styled.div`\r\n  margin: 2.5px 5px;\r\n  padding: 3px 5px;\r\n  border-radius: 3px;\r\n  background: black;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  color: white;\r\n`\r\n\r\nconst Summary = styled.div`\r\n  display: -webkit-box;\r\n  overflow: hidden;\r\n  margin-top: auto;\r\n  text-overflow: ellipsis;\r\n  white-space: normal;\r\n  overflow-wrap: break-word;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  font-size: 16px;\r\n  opacity: 0.8;\r\n`\r\n\r\nconst PostItem: FunctionComponent<PostItemProps> = function ({\r\n  title,\r\n  date,\r\n  categories,\r\n  summary,\r\n  thumbnail: {\r\n    childImageSharp: { gatsbyImageData },\r\n  },\r\n  link,\r\n}) {\r\n  return (\r\n    <PostItemWrapper to={link}>\r\n      <ThumbnailImage image={gatsbyImageData} alt=\"Post Item Image\" />\r\n\r\n      <PostItemContent>\r\n        <Title>{title}</Title>\r\n        <Date>{date}</Date>\r\n        <Category>\r\n          {categories.map(item => (\r\n            <CategoryItem key={item}>{item}</CategoryItem>\r\n          ))}\r\n        </Category>\r\n        <Summary>{summary}</Summary>\r\n      </PostItemContent>\r\n    </PostItemWrapper>\r\n  )\r\n}\r\n\r\nexport default PostItem\r\n","import { MutableRefObject, useState, useEffect, useRef, useMemo } from 'react'\r\nimport { PostListItemType } from 'types/PostItem.types'\r\n\r\nexport type useInfiniteScrollType = {\r\n  containerRef: MutableRefObject<HTMLDivElement | null>\r\n  postList: PostListItemType[]\r\n}\r\n\r\nconst NUMBER_OF_ITEMS_PER_PAGE = 10\r\n\r\nconst useInfiniteScroll = function (\r\n  selectedCategory: string,\r\n  posts: PostListItemType[],\r\n): useInfiniteScrollType {\r\n  const containerRef: MutableRefObject<HTMLDivElement | null> =\r\n    useRef<HTMLDivElement>(null)\r\n  const observer: MutableRefObject<IntersectionObserver | null> =\r\n    useRef<IntersectionObserver>(null)\r\n  const [count, setCount] = useState<number>(1)\r\n\r\n  const postListByCategory = useMemo<PostListItemType[]>(\r\n    () =>\r\n      posts.filter(\r\n        ({\r\n          node: {\r\n            frontmatter: { categories },\r\n          },\r\n        }: PostListItemType) =>\r\n          selectedCategory !== 'All'\r\n            ? categories.includes(selectedCategory)\r\n            : true,\r\n      ),\r\n    [selectedCategory],\r\n  )\r\n\r\n  useEffect(() => {\r\n    observer.current = new IntersectionObserver((entries, observer) => {\r\n      if (!entries[0].isIntersecting) return\r\n\r\n      setCount(value => value + 1)\r\n      observer.unobserve(entries[0].target)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => setCount(1), [selectedCategory])\r\n\r\n  useEffect(() => {\r\n    if (\r\n      NUMBER_OF_ITEMS_PER_PAGE * count >= postListByCategory.length ||\r\n      containerRef.current === null ||\r\n      containerRef.current.children.length === 0 ||\r\n      observer.current === null\r\n    )\r\n      return\r\n\r\n    observer.current.observe(\r\n      containerRef.current.children[containerRef.current.children.length - 1],\r\n    )\r\n  }, [count, selectedCategory])\r\n\r\n  return {\r\n    containerRef,\r\n    postList: postListByCategory.slice(0, count * NUMBER_OF_ITEMS_PER_PAGE),\r\n  }\r\n}\r\n\r\nexport default useInfiniteScroll\r\n","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport PostItem from './PostItem'\r\nimport { PostListItemType } from 'types/PostItem.types'\r\nimport useInfiniteScroll, {\r\n  useInfiniteScrollType,\r\n} from 'hooks/useInfiniteScroll'\r\n\r\nexport type PostType = {\r\n  node: {\r\n    id: string\r\n    frontmatter: {\r\n      title: string\r\n      summary: string\r\n      date: string\r\n      categories: string[]\r\n      thumbnail: {\r\n        publicURL: string\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\ntype PostListProps = {\r\n  selectedCategory: string\r\n  posts: PostListItemType[]\r\n}\r\n\r\nconst PostListWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 20px;\r\n  width: 768px;\r\n  margin: 0 auto;\r\n  padding: 50px 0 100px;\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n    width: 100%;\r\n    padding: 30px 20px;\r\n  }\r\n`\r\n\r\nconst PostList: FunctionComponent<PostListProps> = function ({\r\n  selectedCategory,\r\n  posts,\r\n}) {\r\n  const { containerRef, postList }: useInfiniteScrollType = useInfiniteScroll(\r\n    selectedCategory,\r\n    posts,\r\n  )\r\n\r\n  return (\r\n    <PostListWrapper ref={containerRef}>\r\n      {postList.map(\r\n        ({\r\n          node: {\r\n            id,\r\n            fields: { slug },\r\n            frontmatter,\r\n          },\r\n        }: PostListItemType) => (\r\n          <PostItem {...frontmatter} link={slug} key={id} />\r\n        ),\r\n      )}\r\n    </PostListWrapper>\r\n  )\r\n}\r\n\r\nexport default PostList\r\n","const token = '%[a-f0-9]{2}';\nconst singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nconst multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tconst left = components.slice(0, split);\n\tconst right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch {\n\t\tlet tokens = input.match(singleMatcher) || [];\n\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tconst replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD',\n\t};\n\n\tlet match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch {\n\t\t\tconst result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tconst entries = Object.keys(replaceMap);\n\n\tfor (const key of entries) {\n\t\t// Replace all decoded components\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nexport default function decodeUriComponent(encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n}\n","export default function splitOnFirst(string, separator) {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (string === '' || separator === '') {\n\t\treturn [];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n}\n","export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n","import decodeComponent from 'decode-uri-component';\nimport splitOnFirst from 'split-on-first';\nimport {includeKeys} from 'filter-obj';\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator'\n\t\t\t\t? '[]='\n\t\t\t\t: '=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tencode(key, options),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null\n\t\t\t\t\t? []\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nexport function extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nexport function parse(query, options) {\n\toptions = {\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false,\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst returnValue = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn returnValue;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn returnValue;\n\t}\n\n\tfor (const parameter of query.split('&')) {\n\t\tif (parameter === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst parameter_ = options.decode ? parameter.replace(/\\+/g, ' ') : parameter;\n\n\t\tlet [key, value] = splitOnFirst(parameter_, '=');\n\n\t\tif (key === undefined) {\n\t\t\tkey = parameter_;\n\t\t}\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\n\t\tformatter(decode(key, options), value, returnValue);\n\t}\n\n\tfor (const [key, value] of Object.entries(returnValue)) {\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\n\t\t\t\tvalue[key2] = parseValue(value2, options);\n\t\t\t}\n\t\t} else {\n\t\t\treturnValue[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn returnValue;\n\t}\n\n\t// TODO: Remove the use of `reduce`.\n\t// eslint-disable-next-line unicorn/no-array-reduce\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = returnValue[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexport function stringify(object, options) {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = {encode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',', ...options};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\n\t\t|| (options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = value;\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n}\n\nexport function parseUrl(url, options) {\n\toptions = {\n\t\tdecode: true,\n\t\t...options,\n\t};\n\n\tlet [url_, hash] = splitOnFirst(url, '#');\n\n\tif (url_ === undefined) {\n\t\turl_ = url;\n\t}\n\n\treturn {\n\t\turl: url_?.split('?')?.[0] ?? '',\n\t\tquery: parse(extract(url), options),\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\n\t};\n}\n\nexport function stringifyUrl(object, options) {\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true,\n\t\t...options,\n\t};\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = extract(object.url);\n\n\tconst query = {\n\t\t...parse(queryFromUrl, {sort: false}),\n\t\t...object.query,\n\t};\n\n\tlet queryString = stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\tconst urlObjectForFragmentEncode = new URL(url);\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n}\n\nexport function pick(input, filter, options) {\n\toptions = {\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false,\n\t\t...options,\n\t};\n\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\n\n\treturn stringifyUrl({\n\t\turl,\n\t\tquery: includeKeys(query, filter),\n\t\tfragmentIdentifier,\n\t}, options);\n}\n\nexport function exclude(input, filter, options) {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn pick(input, exclusionFilter, options);\n}\n","import * as queryString from './base.js';\n\nexport default queryString;\n","import React, { FunctionComponent, useMemo } from 'react'\r\nimport Introduction from '../components/Main/Introduction'\r\nimport CategoryList, {\r\n  CategoryListProps,\r\n} from '../components/Main/CategoryList'\r\nimport PostList, { PostType } from '../components/Main/PostList'\r\nimport { graphql } from 'gatsby'\r\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\r\nimport { PostListItemType } from 'types/PostItem.types'\r\nimport queryString, { ParsedQuery } from 'query-string'\r\nimport Template from 'components/Common/Template'\r\n\r\ntype IndexPageProps = {\r\n  location: {\r\n    search: string\r\n  }\r\n  data: {\r\n    site: {\r\n      siteMetadata: {\r\n        title: string\r\n        description: string\r\n        siteUrl: string\r\n      }\r\n    }\r\n    allMarkdownRemark: {\r\n      edges: PostListItemType[]\r\n    }\r\n    file: {\r\n      childImageSharp: {\r\n        gatsbyImageData: IGatsbyImageData\r\n      }\r\n      publicURL: string\r\n    }\r\n  }\r\n}\r\n\r\nconst IndexPage: FunctionComponent<IndexPageProps> = function ({\r\n  location: { search },\r\n  data: {\r\n    site: {\r\n      siteMetadata: { title, description, siteUrl },\r\n    },\r\n    allMarkdownRemark: { edges },\r\n    file: {\r\n      childImageSharp: { gatsbyImageData },\r\n      publicURL,\r\n    },\r\n  },\r\n}) {\r\n  const parsed: ParsedQuery<string> = queryString.parse(search)\r\n  const selectedCategory: string =\r\n    typeof parsed.category !== 'string' || !parsed.category\r\n      ? 'All'\r\n      : parsed.category\r\n\r\n  const categoryList = useMemo(\r\n    () =>\r\n      edges.reduce(\r\n        (\r\n          list: CategoryListProps['categoryList'],\r\n          {\r\n            node: {\r\n              frontmatter: { categories },\r\n            },\r\n          }: PostType,\r\n        ) => {\r\n          categories.forEach(category => {\r\n            if (list[category] === undefined) list[category] = 1\r\n            else list[category]++\r\n          })\r\n\r\n          list['All']++\r\n\r\n          return list\r\n        },\r\n        { All: 0 },\r\n      ),\r\n    [],\r\n  )\r\n\r\n  return (\r\n    <Template\r\n      title={title}\r\n      description={description}\r\n      url={siteUrl}\r\n      image={publicURL}\r\n    >\r\n      <Introduction profileImage={gatsbyImageData} />\r\n      <CategoryList\r\n        selectedCategory={selectedCategory}\r\n        categoryList={categoryList}\r\n      />\r\n      <PostList selectedCategory={selectedCategory} posts={edges} />\r\n    </Template>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n\r\nexport const getPostList = graphql`\r\n  query getPostList {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        siteUrl\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            summary\r\n            date(formatString: \"YYYY.MM.DD.\")\r\n            categories\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 768, height: 400)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    file(name: { eq: \"profile-image\" }) {\r\n      childImageSharp {\r\n        gatsbyImageData(width: 120, height: 120)\r\n      }\r\n      publicURL\r\n    }\r\n  }\r\n`\r\n"],"names":["ProfileImageWrapper","_styled","GatsbyImage","profileImage","___EmotionJSX","image","alt","Background","Wrapper","SubTitle","Title","ProfileImage","CategoryListWrapper","target","name","styles","CategoryItem","_ref","active","props","Link","_ref2","selectedCategory","categoryList","Object","entries","map","_ref4","count","to","key","PostItemWrapper","ThumbnailImage","PostItemContent","Date","Category","Summary","title","date","categories","summary","thumbnail","childImageSharp","gatsbyImageData","link","item","posts","containerRef","useRef","observer","setCount","useState","postListByCategory","useMemo","filter","node","frontmatter","includes","useEffect","current","IntersectionObserver","isIntersecting","value","unobserve","length","children","observe","postList","slice","PostListWrapper","useInfiniteScroll","ref","id","fields","slug","PostItem","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","left","right","Array","prototype","concat","call","decode","input","tokens","match","i","decodeUriComponent","encodedURI","TypeError","replaceMap","exec","result","keys","replace","customDecodeURIComponent","splitOnFirst","string","separator","separatorIndex","indexOf","includeKeys","object","predicate","isArray","descriptor","getOwnPropertyDescriptor","enumerable","defineProperty","Reflect","ownKeys","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","encode","options","strict","encodeURIComponent","x","charCodeAt","toString","toUpperCase","keysSorter","sort","a","b","Number","removeHash","hashStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","extract","queryStart","parse","query","arrayFormat","arrayFormatSeparator","formatter","accumulator","undefined","isEncodedArray","newValue","test","arrayValue","flat","parserForArrayFormat","returnValue","create","parameter","parameter_","key2","value2","reduce","Boolean","stringify","shouldFilter","skipNull","skipEmptyString","index","keyValueSep","encoderForArrayFormat","objectCopy","parseUrl","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryString","getHash","urlObjectForFragmentEncode","URL","pick","exclude","location","search","data","site","siteMetadata","description","siteUrl","allMarkdownRemark","edges","file","publicURL","parsed","category","list","forEach","All","Template","Introduction","CategoryList","PostList"],"sourceRoot":""}